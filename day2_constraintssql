/*==================== CONSTRAINS - KISITLAMALAR =======================
NOT NULL - Bir sutunun NULL icermesini garanti eder.
UNIQUE - Bir sutundaki tum degerlerin BENSERS?Z olmasini garanti eder. Null
         kabul eder, hatta birden fazla null deger girilebilir.
PRIMARY KEY - Bir sutunun NULL icermemesini ve sutundaki verilerin BENZERS?Z 
              olmasini garanti eder. (NOT NULL ve UNIQUE birlesimi gibi)
              
FOREIGN KEY - Baska bir tablodaki Primary Key' i referans gostermek icin
              kullanilir. Boylelikle arasinda iliski kurulmus olur.
              
CHECK - Bir sutundaki tum verilerin belirlenen ozel bir sarti saglamasini
        garanti eder. Soldan tablo silerken kapali olmasi lazim*/

--ORNEK1- NOT NULL
-- ogrenciler tablosu olusturalim ve id field'ini bos birakilamaz yapalim

-- ORNEK1 - NOT NULL
-- Ogrenciler tablosu olusturalim ve id field' ini bos birakilamaz yapalim
CREATE TABLE ogrenciler
(
id char(4),
isim varchar(50),
not_ort number(4,2), --98,55
kayit_tarihi date
);
INSERT INTO ogrenciler VALUES('1234','hasan',75.25,14-01-2020);
INSERT INTO ogrenciler VALUES('1234','ayse',null,null);
INSERT INTO ogrenciler (id,isim) VALUES('3456','fatma');
INSERT INTO ogrenciler VALUES(null,'osman',45.25,'5-01-2020');
SELECT * FROM ogrenciler;
-- ORNEK2 - UNIQUE
-- Tedarikciler olusturalim id unique olsun
create table tedarikciler
(
id char(4) UNIQUE,
isim varchar(50),
adres varchar(100),
tarih date
);
INSERT INTO tedarikciler VALUES ('1234','ayse','mehmet mah izmir','10-11-2020');
INSERT INTO tedarikciler VALUES ('1234','fatma','veli mah istanbul','5-11-2020'); --ORA-00001: unique constraint (HR.SYS_C007031) violated
INSERT INTO tedarikciler VALUES (null,'cem','suvari mah denizli','5-11-1997');
INSERT INTO tedarikciler VALUES (null,'can','zeki mah mus','5-11-1998');
-- drop table tedarikciler;
-- Unique constraint tekrara izin vermez ancak istediginiz kadar null girebilirsiniz
select * from tedarikciler;
-- ORNEK3 - PRIMARY KEY
create table personel (
id char(5) PRIMARY KEY,
isim  varchar(50) UNIQUE,
maas NUMBER(5) NOT NULL,
ise_baslama date
);
INSERT INTO personel VALUES('10001', 'Ahmet Aslan',7000, '13-04-2018');
INSERT INTO personel VALUES( '10001', 'Mehmet Yilmaz' ,12000, '14-04-2018'); -- hata alir
INSERT INTO personel VALUES('10003', '', 5000, '14-04-2018');
INSERT INTO personel VALUES('10004', 'Veli Han', 5000, '14-04-18');
INSERT INTO personel VALUES('10005', 'Ahmet Aslan', 5000, '14-04-18'); -- hata alir
INSERT INTO personel VALUES(NULL, 'Canan Yas', NULL, '12-04-19'); -- null olmaz
select * from personel;
-- Ogrenciler3 tablosu olusturalim ve ogrenci_id 'yi PRIMARY KEY yapalim
CREATE TABLE ogrenciler3
(
ogrenci_id char(4) PRIMARY KEY,
Isim_soyisim varchar2(50),
not_ort number(5,2), --100,00
kayit_tarihi date -- 14-01-2021
);
SELECT * FROM ogrenciler3;
INSERT INTO ogrenciler3 VALUES ('1234', 'hasan yaman',75.70,'14-01-2020');
INSERT INTO ogrenciler3 VALUES (null, 'veli yaman',85.70,'14-01-2020'); -- id null olamaz
INSERT INTO ogrenciler3 VALUES ('1234', 'Ali Can',55.70,'14-06-2020'); -- id benzersiz olmali, daha önce verilen id kullanilamaz
INSERT INTO ogrenciler3 (isim_soyisim) VALUES ( 'Veli Cem'); -- id vermeden baska seyler vermeye gecemezsin, default null atar, bu da primary' ye uymaz
INSERT INTO ogrenciler3 (ogrenci_id) VALUES ( '5687');
-- Primary key alternatif yontem;
-- Bu yöntemde kisitlamaya istedigimiz ismi atayabiliriz
create table calisanlar (
id char(5), -- primary key yeterliyken asagidaki satirlari da yazmak zorunda kald?k
isim varchar(50) UNIQUE,
maas number (5) NOT NULL,
CONSTRAINT id_primary PRIMARY KEY(id)
);
INSERT INTO calisanlar VALUES('10001', 'Ahmet Aslan',7000);
INSERT INTO calisanlar VALUES( '10002', 'Mehmet Yilmaz' ,12000);
INSERT INTO calisanlar VALUES('10003', 'CAN', 5000);
select * from calisanlar;
-- Bir tabloya data eklerken constraint' lere dikkat edilmelidir
-- ORNEK 4 FOREIGN KEY
create table adresler (
adres_id char(5),
sokak varchar(30),
cadde varchar(30),
sehir varchar(15),
CONSTRANT id_foreign FOREIGN KEY(adres_id) REFERENCES calisanlar(id)
);
drop table adresler;
INSERT INTO adresler VALUES('10001','Mutlu Sok', '40.Cad.','IST');
INSERT INTO adresler VALUES('10001','Can Sok', '50.Cad.','Ankara');
INSERT INTO adresler VALUES('10002','Aga Sok', '30.Cad.','Antep');
INSERT INTO adresler VALUES('','Aga Sok', '30.Cad.','Antep');
INSERT INTO adresler VALUES('','Aga Sok', '30.Cad.','Antep');
-- Foreign key null degeri atilabilir.
INSERT INTO adresler VALUES('10004','Gel Sok', '60.Cad.','Van'); -- Parent' ta olmayan id' li veri giremeyiz
select * from calisanlar; -- parent
SELECT * FROM adresler; -- child
drop table calisanlar; -- Child silinmeden parent silinmez
drop table adresler;
-- ogrenciler5 tablosunu olusturun ve id, isim hanelerinin birlesimini primary key yapin
create table ogrenciler5(
id char(4),
isim varchar(20),
not_ort number(5,2),
kayit_tarihi date,
CONSTRAINT ogrenciler5_primary PRIMARY KEY (id,isim) -- 10, ayse +
                                                     -- 10, ayse -
                                                     -- 10, fatma +
                                        
);                                      
INSERT INTO ogrenciler5 VALUES (null,'Veli Cem',90.6,'15-05-2019'); -- ORA-01400: cannot insert NULL into ("HR"."OGRENCILER5"."ID")
INSERT INTO ogrenciler5 VALUES (1234,null,90.6,'15-05-2019'); -- ORA-01400: cannot insert NULL into ("HR"."OGRENCILER5"."ISIM")
INSERT INTO ogrenciler5 VALUES (1234,'Ali Can',90.6,'15-05-2019'); -- PK = 1234Ali Can
INSERT INTO ogrenciler5 VALUES (1234,'Veli Cem',90.6,'15-05-2019'); -- PK = 1234Veli Cem
INSERT INTO ogrenciler5 VALUES (1234,'Oli Can',90.6,'15-05-2019'); -- PK = 1234Oli Can
select * from ogrenciler5;
--“tedarikciler4” isimli bir Tablo olusturun. Icinde “tedarikci_id”, “tedarikci_isim”, “iletisim_isim” field’lari olsun.
--“tedarikci_id” ve “tedarikci_isim” fieldlarini birlestirerek Primary Key olusturun.
--“urunler2” isminde baska bir tablo olusturun.Icinde “tedarikci_id” ve “urun_id” fieldlari olsun.
--“tedarikci_id” ve “urun_id” fieldlarini birlestirerek Foreign Key olusturun
create table tedarikciler4 (
tedarikci_id char(4),
tedarikci_ismi varchar(20),
iletisim_ismi varchar(20),
CONSTRAINT tedarikciler4_pk PRIMARY KEY (tedarikci_id,tedarikci_ismi)
);
create table urunler2 (
tedarikci_id char(4),
urun_id varchar(5),
CONSTRAINT urunler2_fk FOREIGN KEY (tedarikci_id,urun_id) REFERENCES tedarikciler4
                                    -- char + varchar
);